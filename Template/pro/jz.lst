C51 COMPILER V9.00   JZ                                                                    06/09/2019 16:28:57 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE JZ
OBJECT MODULE PLACED IN .\jz.obj
COMPILER INVOKED BY: D:\keil 4\C51\BIN\C51.EXE ..\c\jz.c BROWSE INCDIR(..\h;..\main) DEBUG OBJECTEXTEND PRINT(.\jz.lst) 
                    -OBJECT(.\jz.obj)

line level    source

   1          #include <reg52.h>
   2          #include "mytype.h"
   3          #include "delay.h"
   4          #include "jz.h"
   5          
   6          uchar keyValue;
   7          uchar m_stop=1; 
   8          
   9          bit keyScan()
  10           {
  11   1            uchar x,y;
  12   1                P1=0xf0;
  13   1            if((P1&0xf0)!=0xf0)
  14   1             {
  15   2               delayms(10);
  16   2               if((P1&0xf0)!=0xf0)
  17   2                {
  18   3                           x=P1&0xf0;
  19   3                       P1=0x0f;
  20   3                               y=P1&0x0f;
  21   3                               keyValue=x|y;
  22   3                               while(P1!=0x0f); //当按键未释放时会停在此处，就不会有返回值
  23   3                               return 1;        //或许这里应该是P1!=0x0f时循环return 1 ？       应该不是
  24   3                         /*while(P1!=0x0f)
  25   3                              return 1;           按键按下时循环返回1           就会马上有输出值 上面的程序会卡在循环处 便一直等待按键释放
  26   3                               return 0;                      释放按键后马上返回0
  27   3                               但等到该函数运行完才会回到之前的函数进行判断 吧？
  28   3                           */
  29   3                        }
  30   2                        else
  31   2                              return 0;        //此处新加，如果延时去抖发现按键未按下仍为未按下按键
  32   2            }
  33   1            else
  34   1                      return 0;  // 此处有问题？
  35   1      }
  36          
  37          uchar keyHandle()
  38          {
  39   1      
  40   1            if(keyScan())
  41   1                {
  42   2             switch(keyValue)
  43   2                   {
  44   3                    case 0xee:{return 1  ;break;}  //对应按键S1
  45   3                        case 0xde:{return 2  ;break;}  //对应按键S2
  46   3                        case 0xbe:{return 3  ;break;}  //对应按键S3
  47   3                        case 0x7e:{return 4  ;break;}  //对应按键S4
  48   3                        case 0xed:{return 5  ;break;}  //对应按键S5
  49   3                        case 0xdd:{return 6  ;break;}  //对应按键S6
  50   3                        case 0xbd:{return 7  ;break;}  //对应按键S7
  51   3                        case 0x7d:{return 8  ;break;}  //对应按键S8
  52   3                        case 0xeb:{return 9  ;break;}  //对应按键S9
  53   3                        case 0xdb:{return 10 ;break;} //对应按键S10
  54   3                        case 0xbb:{return 11 ;break;} //对应按键S11
C51 COMPILER V9.00   JZ                                                                    06/09/2019 16:28:57 PAGE 2   

  55   3                        case 0x7b:{return 12 ;break;} //对应按键S12
  56   3                        case 0xe7:{return 13 ;break;} //对应按键S13
  57   3                        case 0xd7:{return 14 ;break;} //对应按键S14
  58   3                        case 0xb7:{return 15 ;break;} //对应按键S15
  59   3                        case 0x77:{return 16 ;break;} //对应按键S16
  60   3                        default:{return 0;break;}
  61   3                   }
  62   2                 }
  63   1                      else    return 0;
  64   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    168    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
